{"version":3,"sources":["../src/create_controls.js"],"names":["define","$","Log","Ajax","DeleteControl","UpdateControl","GoogledocsControl","parentfile_id","create","instance_id","files_to_erase","countCalls","dist_type","group_folder_ids","self","prototype","main","test_service","initTags","callStudentFileService","callGroupFileService","initGroupingTags","callGroupingFileService","create_group_folder","shareSameGroupGroupingService","callGroupGroupingFileService","initGGTags","document","ajaxStop","children","each","tag","find","removeClass","html","addClass","from_existing","attr","length","delete_file_from_grouping","totalCalls","file_to_update","removeAttr","push","init","JSON","stringify","e","tagDisplay","gid","statuscol","rownumber","creation","failedTag","group_id","debug","student_id","student_email","student_name","dist","create_student_file","callStudentFileServiceForGroup","grouping_id","student_group_id","student_grouping_id","folder_id","get_group_folder_id","call","methodname","args","folder_group_id","done","response","url","urls","parse","renderStudentLinks","ref","fail","reason","error","forEach","index","src","append","owner_email","group_name","groupid","a_element","create_group_file","create_grouping_file","owneremail","instanceid","gname","gtype","aelement","create_group_grouping_file","grouping_sharing","append_links_to_icons","googledocid","parentfileid","id","get_grouping_url","groupingsurl","get_grouping_url_for_student","file_ids","results","g_ids","groups","split","i","includes","ids","links","append_links_helper","console","log","control"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Provides the mod_googledocs/create_control module\n *\n * @package   mod_googledocs\n * @category  output\n * @copyright 2020 Veronica Bermegui\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_googledocs/control\n */\ndefine(['jquery', 'core/log', 'core/ajax', 'mod_googledocs/delete_controls', 'mod_googledocs/update_controls'],\nfunction ($, Log, Ajax, DeleteControl, UpdateControl) {\n    'use strict';\n    /**\n     * Initializes the controls.\n     */\n    function init(create, dist_type) {\n        Log.debug('mod_googledocs/update_control: initializing of the mod_googledocs control');\n        Log.debug(dist_type);\n\n        var parentfile_id = $('table.overviewTable').attr('data-googledocs-id');\n        var files_to_erase = []; // Collection of files ids to delete after copies are created\n        var instance_id = $('table.overviewTable').attr('data-instance-id');\n        var countCalls = 0;\n        var group_folder_ids;\n\n        var control = new GoogledocsControl(parentfile_id, create, instance_id, \n        files_to_erase, countCalls, dist_type, group_folder_ids);\n\n        control.main();\n    }\n\n    // Constructor.\n    function GoogledocsControl( parentfile_id, create,  instance_id, \n     files_to_erase, countCalls, dist_type, group_folder_ids) {\n\n        var self = this;\n        self.parentfile_id = parentfile_id;\n        self.create = create;\n        self.instance_id = instance_id;\n        self.files_to_erase = files_to_erase;\n        self.countCalls = countCalls;\n        self.dist_type = dist_type;\n        self.group_folder_ids = group_folder_ids;\n\n    }\n\n    GoogledocsControl.prototype.main = function () {\n        var self = this;\n        self.test_service();\n        // Only call the create service if the files are not created.\n        // This JS is called in the view.php page, which calls the function\n        // that renders the table. It is the same table for created and processing\n        //when sharing by group or by bygrouping other WS is called\n\n        self.initTags();\n\n        switch(self.dist_type) {\n\n            case 'std_copy' :\n                if (!self.create) {\n                    self.callStudentFileService(self.parentfile_id);\n                }\n                break;\n\n            case 'group_copy' :\n                if (!self.create) {\n                    self.callGroupFileService();\n                }\n                break;\n\n            case 'grouping_copy' :\n                self.initGroupingTags();\n                if (!self.create) {\n                    self.callGroupingFileService();\n                }\n                break;\n\n            case 'std_copy_group':\n                if(!self.create) {\n                   self.create_group_folder();\n                }\n                break;\n\n            case 'dist_share_same' :\n                if(!self.create) {\n                   self.callStudentFileService(self.parentfile_id);\n                }\n                break;\n\n            case 'dist_share_same_group' :\n                if (!self.create) {\n                  // self.create_group_folder();\n                   self.shareSameGroupGroupingService();\n                }\n                break;\n            case 'dist_share_same_grouping' :\n                if (!self.create) {\n                   self.callGroupingFileService(self.parentfile_id);\n                }\n                break;\n            case 'std_copy_grouping' :\n                if(!self.create) {\n                    self.create_group_folder();\n                }\n                break;\n            case 'std_copy_group_grouping':\n                if(!self.create) {\n                    self.create_group_folder();\n                }\n                break;\n            case 'group_grouping_copy' :\n                if (!self.create) {\n                    self.callGroupGroupingFileService();\n                }else{\n                    self.initGGTags();\n                }\n                break;\n            case 'dist_share_same_group_grouping' :\n                if (!self.create) {\n                   self.callGroupGroupingFileService();\n                } else {\n                    self.initGGTags();\n                }\n                break;\n\n        }\n\n        \n        // When sharing by group or grouping. The same file is shared.\n        // The generation of this file might be quick, but giving the students\n        // a permission can take some time. In order for the entire sharing is done\n        // The progress bar is only removed when all the ajax calls finish.\n        $(document).ajaxStop(function() {\n\n            $('tbody').children().each(function(){\n                var tag = $(this).find('#status_col');\n                tag.removeClass('spinner-border color');\n                tag.html('Created');\n                tag.addClass('tag_doc success');\n            });\n\n            var from_existing = $('table.overviewTable').attr('data-from-existing');\n\n            if(self.dist_type == 'grouping_copy'){\n\n               $('tbody.grouping-groups td.groups').each(function(){\n\n                    $(this).find('table').each(function(){\n                        var tag = $(this).find(\"#file_grouping\");\n                        tag.removeClass('spinner-border color');\n                        tag.html('Created');\n                        tag.addClass('tag_doc success');\n                    });\n                });\n\n                if(self.files_to_erase.length > 0  && from_existing == 0) {\n                    self.delete_file_from_grouping();\n                    self.files_to_erase = [];\n                }\n           }\n\n           // Once the students get their file or permission to access file\n           // delete the original file (when the file is created with the activity module)\n           // don't delete originals created with the \"Create from existing\" option.\n           //For group and students distribution is the same process.\n            var totalCalls = $('tbody').children().length;\n            var file_to_update = $('table.overviewTable').attr('data-googledocs-id');\n\n            $('table.overviewTable').removeAttr('data-googledocs-id');\n\n            if(from_existing == 1 && self.countCalls == totalCalls\n                    && file_to_update != undefined ) {\n               self.files_to_erase.push(file_to_update);\n               UpdateControl.init(JSON.stringify(self.files_to_erase));\n               self.countCalls = 0;\n            }\n\n            if(self.dist_type == 'group_grouping_copy' && self.countCalls == totalCalls) {\n               self.files_to_erase.push(file_to_update);\n               DeleteControl.init(JSON.stringify(self.files_to_erase), self.dist_type);\n               self.countCalls = 0;\n            }\n\n            if (self.countCalls == totalCalls && file_to_update != undefined \n                    && from_existing == 0 && self.dist_type != 'grouping_copy'){\n                self.files_to_erase.push(file_to_update);\n                DeleteControl.init(JSON.stringify(self.files_to_erase), self.dist_type);\n                self.countCalls = 0;\n            }\n        });\n    };\n\n    GoogledocsControl.prototype.initTags = function (){\n        var self = this;\n        $('tbody').children().each(function(e){\n            if ($('#link_file_' + e).attr('href') != '#'){\n                self.tagDisplay(e, self.create);\n            }else{\n                self.tagDisplay(e, self.create);\n            }\n        });\n    };\n\n    GoogledocsControl.prototype.initGGTags = function () {\n\n         $('tbody').find('[data-g-name]').each(function(){\n            var gid = $(this).attr('data-g-id');\n            var statuscol = ($(this).find('div#status_col_' + gid));\n            $(statuscol).html('Created');\n            $(statuscol).addClass('tag_doc success');\n        });\n    };\n\n    GoogledocsControl.prototype.initGroupingTags = function () {\n        var self = this;\n       \n         $('tbody').find('[data-grouping-name]').each(function(){\n            var gid = $(this).attr('data-grouping-id');\n            var statuscol = ($(this).find('div#status_col_' + gid));\n            if (self.create) {\n                $(statuscol).html('Created');\n                $(statuscol).addClass('tag_doc success');\n            } else{\n                $('div#status_col_' + gid).addClass('spinner-border color');\n            }\n        });\n    };\n\n\n\n    /**\n     * display created or failed on the table's status column.\n     */\n    GoogledocsControl.prototype.tagDisplay = function(rownumber, creation){\n        if(creation === true) {\n            $('#file_' + rownumber).html('Created');\n            $('#file_' + rownumber).addClass('tag_doc success');\n\n        }else{\n           // $('#file_' + rownumber).html('Failed');\n            $('#file_' + rownumber).addClass('spinner-border color');\n        }\n\n    };\n\n    GoogledocsControl.prototype.failedTag = function (rownumber) {\n         $('#file_' + rownumber).html('Failed');\n    }\n\n\n    /**\n     * Example with file name Grouping_Share and groupings called Even and Odd respectively\n     * Even grouping has groups 2 and 4, Odd has groups 1 and 3\n     * Files created:\n     * 1. Grouping_Share \n     * 2. Grouping_share_odd\n     *     Grouping_Share_Grouping_share_odd_group_1\n     *       Grouping_Share_Grouping_share_odd_group_3\n     * 3. Grouping_share_even\n     *     Grouping_Share_Grouping_share_even_group_2\n     *       Grouping_Share_Grouping_share_even_group_4\n     *\n     * This function process the deletion of the following files:\n     *    Grouping_Share\n     *    Grouping_share_odd\n     *    Grouping_share_even\n     * @returns {undefined}\n     */\n    GoogledocsControl.prototype.delete_file_from_grouping = function () {\n        var self = this;\n        DeleteControl.init(JSON.stringify(self.files_to_erase), self.dist_type);\n        self.files_to_erase = [];\n        self.countCalls = 0;\n    };\n\n\n    GoogledocsControl.prototype.callStudentFileService = function(parentfile_id, group_id = 0 ){\n        var self = this;\n\n        Log.debug(\"callStudentFileService\");\n        $('tbody').children().each(function(e){\n\n            var student_id = $(this).attr('data-student-id');\n            var student_email = $(this).attr('data-student-email');\n            var student_name = $(this).attr('student-name');\n            var gid;\n\n            if (self.dist == 'dist_share_same_grouping' || self.dist == 'std_copy_grouping'){\n                gid = $(this).attr('student-grouping-id');\n            } else {\n                gid = $(this).attr('student-group-id');\n            }\n\n            self.create_student_file(e, student_id, student_email, student_name, parentfile_id, gid);\n        });\n\n    };\n\n    GoogledocsControl.prototype.callStudentFileServiceForGroup = function(parentfile_id, group_id, grouping_id = 0) {\n        var self = this;\n        Log.debug(\"Enters to: callStudentFileServiceForGroup\");\n        Log.debug(\"Parent file ID \" + parentfile_id + \"Group ID \" + group_id + \"Grouping ID \" + grouping_id);\n        $('tbody#group-members-'+group_id).children().each(function(e){\n\n            var student_id = $(this).attr('data-student-id');\n            var student_email = $(this).attr('data-student-email');\n            var student_name = $(this).attr('student-name');\n            var student_group_id = $(this).attr('student-group-id');\n            if(student_group_id == group_id) {\n                self.create_student_file(e, student_id, student_email, student_name, parentfile_id,\n                                          student_group_id,  grouping_id );\n\n            }\n        });\n\n    };\n\n\n    GoogledocsControl.prototype.create_student_file = function (rownumber, student_id, student_email,\n                                                                student_name, parentfile_id, \n                                                                student_group_id = 0,\n                                                                student_grouping_id = 0 ) {\n        var self = this;\n        var folder_id = 0;\n\n        if(self.dist_type != 'group_copy') {\n           $('#file_' + rownumber).addClass('spinner-border color'); // progress bar visible. spinner-border\n        }\n\n        if(self.dist_type == 'std_copy_group' \n            || self.dist_type == 'std_copy_grouping'\n            || self.dist_type == 'std_copy_group_grouping') {\n\n            folder_id = self.get_group_folder_id(student_group_id, self.group_folder_ids);\n            Log.debug(\"create_student_file student_name = \" + student_name );\n            Log.debug(\"create_student_file folder_id = \" + folder_id );\n        }\n\n        Ajax.call([{\n\n                methodname: 'mod_googledocs_create_students_file',\n\n                args: {\n                    folder_group_id: folder_id,\n                    group_id : student_group_id,\n                    grouping_id: student_grouping_id,\n                    instance_id : self.instance_id,\n                    parentfile_id: parentfile_id,\n                    student_email: student_email,\n                    student_id: student_id,\n                    student_name: student_name\n                },\n\n                done: function (response) {\n                    Log.debug(response.url);\n                    self.countCalls++;\n                    // Add file's link\n\n                    var urls = JSON.parse(response.url);\n\n                    if (self.dist_type == 'std_copy_group' \n                        ||self.dist_type == 'std_copy_grouping'\n                        || self.dist_type == 'std_copy_group_grouping') {\n\n                        self.renderStudentLinks(urls, rownumber);\n\n                    } else {\n                        var ref = $('#' + 'link_file_' + rownumber);\n                        $(ref).attr(\"href\", urls[0]);\n                    }\n\n                    // Remove progress bar and display status\n                    if(self.dist_type != 'group_copy') {\n                        $('#file_' + rownumber).removeClass('spinner-border color');\n                        self.tagDisplay(rownumber, true);\n                    }\n\n                },\n\n                fail: function (reason) {\n                    Log.error(reason);\n                    $('#file_' + rownumber).removeClass('spinner-border color');                   \n                    self.failedTag(rownumber);\n                }\n            }]);\n\n\n    };\n\n    // When dist. is each student from X group gets a copy. A student\n    // can get more than one copy.\n     GoogledocsControl.prototype.renderStudentLinks = function(urls, rownumber) {\n        urls.forEach(function(url, index){\n                       Log.debug('addLinks ' + rownumber);\n                        var ref = $('#' + 'link_file_' + rownumber);\n                        if(index === 0) {\n                           $(ref).attr(\"href\", url);\n                        }else{\n                           var src = $(ref).find(\"img\").attr(\"src\");\n                           $(ref).append('<a target=\"_blank\" id=\"link_file_' + rownumber +  '\"href=\"' + url + '\" class=\"link_icon\">\\n\\\n                            <img src=\"'+ src +'\" class=\"link_icon\"</a>');\n                        }\n                    }, rownumber);\n     };\n\n    GoogledocsControl.prototype.callGroupFileService = function (){\n\n        var owner_email = $('table.overviewTable').attr('data-owner-email');\n        var self = this;\n\n        $('tbody').find('[data-group-name]').each(function(){\n            self.countCalls++;\n            var group_name = $(this).attr('data-group-name');\n            var groupid =   $(this).attr('data-group-id');\n            var a_element = ($(this).find('#shared_link_url_' + groupid))[0]; //It is always the one element.\n           ($(this).find('div#status_col')).addClass('spinner-border color');\n            self.create_group_file(a_element, owner_email, group_name, groupid);\n\n        });\n\n    };\n\n\n    GoogledocsControl.prototype.callGroupingFileService = function (){\n        \n        var self = this;\n        var owner_email = $('table.overviewTable ').attr('data-owner-email');\n        self.create_grouping_file(owner_email);        \n    };\n\n    GoogledocsControl.prototype.callGroupGroupingFileService = function (){\n        var owneremail = $('table.overviewTable').attr('data-owner-email');\n        var instanceid = $('table.overviewTable').attr('data-instance-id');\n        var self = this;\n\n        $('tbody').find('[data-g-name]').each(function(){\n            self.countCalls++;\n            var gname = $(this).attr('data-g-name');\n            var gid = $(this).attr('data-g-id');\n            var gtype = $(this).attr('data-g-type');            \n            var aelement = ($(this).find('#shared_link_url_' + gid))[0]; //It is always the one element.\n            var statuscol = ($(this).find('#status_col_' + gid));\n           ($(this).find('div#status_col_' + gid)).addClass('spinner-border color');\n            self.create_group_grouping_file(aelement, statuscol, owneremail, instanceid, gname, gid, gtype);\n\n        });\n    };\n\n    /**\n     * Creates the file FileName_Group_Name\n     * @param htmlElement a_element\n     * @param String owner_email\n     * @param String group_name\n     * @param int group_id\n     * @param int parentfile_id\n     * @param int grouping_id\n     *\n     */\n    GoogledocsControl.prototype.create_group_file = function(a_element = '' , \n    owner_email, group_name = '', group_id, parentfile_id = 0, grouping_id = 0){\n\n        var self = this;\n\n        if(!self.grouping_sharing) {\n            parentfile_id = self.parentfile_id;\n        }\n\n        Ajax.call([{\n            methodname: 'mod_googledocs_create_group_file',\n            args: {\n                group_name: group_name,\n                group_id: group_id,\n                grouping_id: grouping_id,\n                instance_id: self.instance_id,\n                owner_email: owner_email,\n                parentfile_id: parentfile_id,\n            },\n            done: function (response) { \n                Log.debug(\"mod_googledocs_create_group_file \" + response);\n                if(self.dist_type == 'dist_share_same_group' \n                        || self.dist_type == 'dist_share_same_grouping_copy'\n                        || self.dist_type == 'dist_share_same_group_grouping_copy') {\n                    self.append_links_to_icons(response.url); //  Traverse the list of students and add the link accoding to the group they belong to.\n                }else{\n                    // Add file's link\n                   $(a_element).attr(\"href\", response.url);\n                   //Returns the ID of the file created for the group.\n                   Log.debug('Group ID' + group_id)\n                   self.callStudentFileServiceForGroup(response.googledocid, group_id);\n                }\n\n                self.files_to_erase.push(parentfile_id);\n\n            },\n            fail: function (reason) {\n                Log.error(reason);\n            }\n        }]);\n\n\n    };\n\n    /**\n     * Creates the file FileName_GroupingName for all the groupings selected.\n     * The same url is shared with the members of the grouping groups.\n     * @param String grouping_name\n     * @param  int grouping_id\n     * @param String owner_email\n     */\n    GoogledocsControl.prototype.create_grouping_file = function (owner_email) {\n        var self = this;\n        Log.debug(\"create_grouping_file llamada\");\n\n        Ajax.call([{\n            methodname: 'mod_googledocs_create_grouping_file',\n            args: {\n                owneremail: owner_email,\n                parentfileid: self.parentfile_id,\n            },\n            done: function (response) {\n\n                if (self.dist_type == 'grouping_copy') {\n                   Log.debug(response) ;\n                    $('tbody tr').each(function(){\n                        var id = $(this).attr('data-grouping-id');  // Get the grouping id\n                        self.get_grouping_url(id, JSON.parse(response.groupingsurl)); \n                    });\n                } else {\n                    // Add file's link\n                    $('tbody tr').each(function(e){\n                        var id = $(this).attr('student-grouping-id');  // Get the grouping id(s) the student belongs to\n                        self.get_grouping_url_for_student(id, JSON.parse(response.groupingsurl), e); \n                    });\n                }\n            },\n            fail: function (reason) {\n                Log.error(reason);\n            }\n        }]);\n    };\n\n    GoogledocsControl.prototype.create_group_grouping_file = function (aelement = '', statuscol = '',owneremail,\n                                                                             instanceid, gname, gid, gtype ) {\n        var self = this;\n        Ajax.call([{\n            methodname: 'mod_googledocs_create_group_grouping_file',\n            args: {\n                gid: gid,\n                gname: gname,\n                gtype: gtype,\n                instanceid: instanceid,\n                owneremail: owneremail,\n                parentfileid: self.parentfile_id,\n                },\n                done: function (response) {\n                    // Add file's link.\n                    $(aelement).attr(\"href\", response.url);\n                    // Change status.\n                    $(statuscol).removeClass('spinner-border color');\n                    $(statuscol).html('Created');\n                    $(statuscol).addClass('tag_doc success');\n\n                },\n                fail: function (reason) {\n                    Log.error(reason);\n                }\n            }]);\n    };\n    \n    GoogledocsControl.prototype.test_service = function () {\n        Log.debug(\" Starting test_service\");\n        Ajax.call([{\n            methodname: 'mod_googledocs_test_service_call',\n            args: {\n                file_ids: '123',\n                },\n                done: function (response) {\n                    \n                  Log.debug(response.results);\n\n                },\n                fail: function (reason) {\n                    Log.debug(reason);\n                }\n            }]);\n    };\n  \n\n    //Dist. Each student from a group gets a copy or each std. from a group share same copy. Create group folders\n    GoogledocsControl.prototype.create_group_folder = function(){\n        var self = this;\n        Log.debug(\"create_group_folder \" + self.instance_id);\n        Ajax.call([{\n            methodname: 'mod_googledocs_create_group_folder_struct',\n            args: {\n                instanceid: self.instance_id,\n            },\n            done: function (response) {\n               Log.debug('mod_googledocs_create_group_folder_struct');\n               self.group_folder_ids = JSON.parse(response.group_folder_ids);\n               // Each student will get a copy.\n               if(self.dist_type ==  'std_copy_group' \n                    || self.dist_type == 'std_copy_grouping'\n                    || self.dist_type == 'std_copy_group_grouping') {\n\n                    self.callStudentFileService(self.parentfile_id);\n               }\n\n               // Create the copy and the owner is the teacher.\n               if(self.dist_type == 'dist_share_same_group'\n                    || self.dist_type == 'dist_share_same_grouping_copy'\n                    || self.dist_type == 'dist_share_same_group_grouping_copy') {\n\n                   var g_ids = $('table.overviewTable').attr('data-all-groups');\n                   var owner_email = $('table.overviewTable').attr('data-owner-email');\n                   self.create_group_file('',owner_email, '', g_ids, self.parentfile_id);\n               }\n\n            },\n            fail: function (reason) {\n                Log.error(reason);\n            }\n        }]);\n    };\n\n    GoogledocsControl.prototype.shareSameGroupGroupingService = function () {\n        var self = this;\n        var g_ids = $('table.overviewTable').attr('data-all-groups');\n        var owner_email = $('table.overviewTable').attr('data-owner-email');\n        self.create_group_file('',owner_email, '', g_ids, self.parentfile_id);\n        \n    };\n\n    /**\n     * \n     * @param {type} group_id\n     * @param {type} group_folder_ids\n     * @returns {unresolved}\n     */\n    GoogledocsControl.prototype.get_group_folder_id = function (group_id, group_folder_ids) {  \n        var groups = group_id.split('-');\n        for(var i = 0; i < group_folder_ids.length; i++) {\n            if (group_folder_ids[i].group_id == group_id || groups.includes(group_folder_ids[i].group_id)) {\n               return group_folder_ids[i].folder_id;\n               break;\n            }\n        }\n\n    };\n\n    /**\n     * Get the URL(s) generated for the grouping with the given id\n     * If a student belongs to more than one grouping, return all the urls\n     * This function is called when the distribution is dist_share_same_grouping      \n     */\n    GoogledocsControl.prototype.get_grouping_url_for_student = function (id, urls, rownumber) {\n\n        var ids =  id.split('-');\n        var links = [];\n        var self = this;\n\n        for (var i = 0 ; i < urls.length; i++) {\n          \n            if (ids.includes(urls[i].gid)) {\n                links.push(urls[i].url);\n            }\n        }\n        Log.debug(links);\n        self.append_links_helper(links, rownumber);\n    };\n  \n    /**\n     * Get the URL generated for the grouping with the given id\n     * This function is called when the distribution is grouping_copy\n     */\n    GoogledocsControl.prototype.get_grouping_url = function (id, urls) {\n\n        var ref = $('#' + 'shared_link_url_' + id);  \n\n        for (var i = 0 ; i < urls.length; i++) {\n            if (id == (urls[i].gid)) {\n                $(ref).attr(\"href\", urls[i].url);\n                var tag = $('#status_col_' + id);\n                tag.removeClass('spinner-border color');\n                tag.html('Created');\n                tag.addClass('tag_doc success');\n                break;\n            }\n        }\n\n    };\n\n    /**\n     * For distributions involving GROUPS\n     * @param {type} urls\n     * @returns {undefined}\n     */\n    GoogledocsControl.prototype.append_links_to_icons = function(urls) {\n        var self = this;\n        \n        $('tbody').children().each(function(e){\n            self.countCalls++;\n            Log.debug('append_links_to_icons');\n            var id = $(this).attr('student-group-id');\n            //self.append_links_helper(links, rownumber);\n            self.get_grouping_url_for_student(id, JSON.parse(urls), e); \n     \n\n        });\n\n    };\n\n    //\n    /**\n     * Add the url in the href property. If the student has more than one\n     * grouping, append new icons\n     * Distribution = dist_share_same_grouping.\n     * @param {type} urls\n     * @param {type} rownumber\n     * @returns {undefined}\n     */\n    GoogledocsControl.prototype.append_links_helper = function(urls, rownumber) {\n        var self = this;\n        console.log('append_links_helper');\n        console.log(urls);\n        urls.forEach(function(url, index){\n           \n            console.log(\"LA URL ES: \" + url);\n            var ref = $('#' + 'link_file_' + rownumber);\n            var src = $(ref).find(\"img\").attr(\"src\");\n\n            if (index == 0) {\n                $(ref).attr(\"href\", url); // Set link the existing icon\n            } else {\n                $(ref).append('<a target=\"_blank\" id=\"link_file_' + rownumber +\n                '\"href=\"' + url + '\" class=\"link_icon\">\\n\\ \\n\\\n                <img src=\"'+ src +'\" class=\"link_icon\"</a>');\n            }\n\n            $('#file_' + rownumber).removeClass('spinner-border color');\n            self.tagDisplay(rownumber, true);\n        });\n    };\n\n    return {\n        init: init\n    };\n });"],"file":"create_controls.min.js"}