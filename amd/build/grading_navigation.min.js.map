{"version":3,"sources":["../src/grading_navigation.js"],"names":["define","$","notification","ajax","str","GoogledocSaveGrading","Checker","GoogleLogin","GradingNavigation","selector","console","log","_regionSelector","_region","_users","_gradeFeedbackChanged","_loadAllUsers","_previousformvales","saveFormState","find","on","_handlePreviousUser","bind","_handleNextUser","_refreshView","document","_leavepanel","prototype","_isLoading","_filters","select","googledocid","attr","groupid","call","methodname","args","done","_setUsers","fail","exception","users","JSON","parse","e","preventDefault","checkFormForChanges","_handleChangeUserHelper","userid","filter","val","_handlePreviousUser_helper","parseInt","currentSelectionid","prev","removeAttr","lastSelection","_handleNextUser_helper","next","update_url","url","URL","window","location","searchParams","get","set","history","replaceState","event","fromhandleUser","target","value","each","trigger","get_user_by_id","data","response","region","fadeOut","replaceWith","html","show","init","login","children","reason","anchor","closest","getAttribute","get_strings","key","component","strs","confirm","nav","className"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to handle changing users via the user selector in the header.\n * Based on Assign module\n * @module     mod_googledocs/grading_navigation\n * @package    mod_googledocs\n * @copyright  2020 Veronica Bermegui\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.1\n */\ndefine(['jquery', 'core/notification', 'core/ajax', 'core/str', 'mod_googledocs/save_grading',\n    'mod_googledocs/grading_form_change_check', 'mod_googledocs/google_login'],\n        function ($, notification, ajax, str, GoogledocSaveGrading, Checker, GoogleLogin) {\n\n            /**\n             * GradingNavigation class.\n             *\n             * @class GradingNavigation\n             * @param {String} selector The selector for the page region containing the user navigation.\n             */\n            var GradingNavigation = function (selector) {\n                console.log(\" GradingNavigation constructor....\");\n                this._regionSelector = selector;\n                this._region = $(selector);\n                this._users = [];\n                this._gradeFeedbackChanged = false;\n                this._loadAllUsers();\n\n                this._previousformvales = Checker.saveFormState('#gradeform');\n\n                // Attach listeners to the select and arrow buttons.\n                this._region.find('[data-action=\"previous-user\"]').on('click', this._handlePreviousUser.bind(this));\n                this._region.find('[data-action=\"next-user\"]').on('click', this._handleNextUser.bind(this));\n                this._region.find('[data-action=\"change-user\"]').on('change', this._refreshView.bind(this));\n                $(document).find('[data-region=\"googledoc-info\"]').on('click', this._leavepanel.bind(this));\n            };\n\n            /** @type {Boolean} Boolean tracking active ajax requests. */\n            GradingNavigation.prototype._isLoading = false;\n\n            /** @type {String} Selector for the page region containing the user navigation. */\n            GradingNavigation.prototype._regionSelector = null;\n\n            /** @type {Array} The list of active filter keys */\n            GradingNavigation.prototype._filters = null;\n\n            /** @type {Array} The list of users */\n            GradingNavigation.prototype._users = null;\n\n            /** @type {JQuery} JQuery node for the page region containing the user navigation. */\n            GradingNavigation.prototype._region = null;\n\n            GradingNavigation.prototype._gradeFeedbackChanged = null;\n\n            /**\n             * Load the list of all users for this assignment.\n             * and their file info.\n             * @private\n             * @method _loadAllUsers\n             * @return {Boolean} True if the user list was fetched.\n             */\n            GradingNavigation.prototype._loadAllUsers = function () {\n                var select = this._region.find('[data-action=change-user]');\n                var googledocid = select.attr('data-googledocid');\n                var groupid = select.attr('data-groupid');\n\n                ajax.call([{\n                        methodname: 'mod_googledocs_get_participants',\n                        args: {googledocid: googledocid, groupid: groupid},\n                        done: this._setUsers.bind(this),\n                        fail: notification.exception\n                    }]);\n\n                return true;\n            };\n\n            /**\n             *      *\n             * @private\n             * @method _usersLoaded\n             * @param {Array} users\n             */\n            GradingNavigation.prototype._setUsers = function (users) {\n                this._users = JSON.parse(users.users);\n            };\n\n            /**\n             * Change to the previous user in the grading list.\n             *\n             * @private\n             * @method _handlePreviousUser\n             * @param {Event} e\n             */\n            GradingNavigation.prototype._handlePreviousUser = function (e) {\n                e.preventDefault();\n\n                if (Checker.checkFormForChanges('#gradeform')) {\n                    this._handleChangeUserHelper(e);\n                } else {\n                    var userid = $(\"select.custom-select option\").filter(\":selected\").val();\n                    this._handlePreviousUser_helper(userid);\n                    userid = $(\"select.custom-select option\").filter(\":selected\").val();\n                    userid = parseInt(userid, 10);\n                    this._refreshView(e, userid, true);\n\n                }\n\n            };\n\n            GradingNavigation.prototype._handlePreviousUser_helper = function (currentSelectionid) {\n                $('.custom-select option:selected').prev().attr('selected', 'selected');\n                $(`select.custom-select option[value='${currentSelectionid}']`).removeAttr('selected');\n            }\n\n            /**\n             * Change to the next user in the grading list.\n             *\n             * @param {Event} e\n             * @param {Boolean} saved Has the form already been saved? Skips checking for changes if true.\n             */\n            GradingNavigation.prototype._handleNextUser = function (e) {\n                e.preventDefault();\n                var currentSelectionid = $('.custom-select option:selected').val();\n                var lastSelection = $('select.custom-select option:last-child').val();\n\n                if (Checker.checkFormForChanges('#gradeform')) {\n                    if (currentSelectionid == lastSelection) {\n                        this._handleChangeUserHelper(0); // go back to the beginning.\n                    } else {\n                        this._handleChangeUserHelper(e);\n                    }\n                } else {\n\n                    if (currentSelectionid == lastSelection) {\n                        userid = 0;\n                    } else {\n                        this._handleNextUser_helper(currentSelectionid);\n                        var userid = $(\"select.custom-select option\").filter(\":selected\").val();\n                    }\n                    this._refreshView(e, userid, true);\n                }\n            };\n\n            GradingNavigation.prototype._handleNextUser_helper = function (currentSelectionid) {\n                $('select.custom-select option:selected').next().attr('selected', 'selected');\n                $(`select.custom-select option[value='${currentSelectionid}']`).removeAttr('selected');\n            };\n\n            GradingNavigation.prototype.update_url = function (userid) {\n                var url = new URL(window.location);\n                url.searchParams.get('userid');\n                url.searchParams.set('userid', userid);\n                // We do this so a browser refresh will return to the same user.\n                window.history.replaceState({}, \"\", url);\n            };\n\n            /**\n             * Respond to a user-changed event by updating the view.\n             *\n             * @private\n             * @method _refreshView\n             * @param {Event} event\n             * @param {String} userid\n             */\n            GradingNavigation.prototype._refreshView = function (event, userid, fromhandleUser) {\n\n                userid = fromhandleUser ? userid : event.target.value;\n\n                if (userid == 0) {\n                    $('select.custom-select').val(userid);\n                }\n\n                userid = parseInt(userid, 10);\n\n                if (Checker.checkFormForChanges('#gradeform')) {\n                    this._handleChangeUserHelper(userid);\n                } else {\n                    if (!fromhandleUser) {\n                        $(\".custom-select option\").each(function () {\n                            $(this).removeAttr('selected');\n                        });\n                        $(`select.custom-select option[value='${userid}']`).attr('selected', 'selected')\n                    }\n                    $(document).trigger('user-changed', userid);   // Refresh name\n                    GradingNavigation.prototype.get_user_by_id(userid);\n                    GradingNavigation.prototype.update_url(userid);\n                }\n            };\n\n            GradingNavigation.prototype.get_user_by_id = function (userid) {\n\n                var googledocid = String($('[data-region=\"user-info\"]').data('googledocid'))\n\n                ajax.call([{\n                        methodname: 'mod_googledocs_get_next_participant_details',\n                        args: {\n                            userid: userid,\n                            googledocid: googledocid\n                        },\n                        done: function (response) {\n\n                            var region = $('[data-region=\"grade\"]');\n\n                            region.fadeOut(300, function () {\n                                region.replaceWith(response.html);\n                                region.show();\n                                $(\"#gradeform\").on('submit', GoogledocSaveGrading.init()); //Re-attach the events                       \n                                Checker.saveFormState('#gradeform'); //get the current data from the form\n                                \n                                var login = $(\"#page-mod-googledocs-view_grading_app\").find(\"#viewfolder\").children()[0];\n                                // File type folder. Change user but user is not logged in.\n                                // Re-attach the login event.\n                                console.log(\"LOGIN VAR\");\n                                console.log(login);\n                                if (login !=undefined) {\n                                    $(login).on('click', GoogleLogin.init());\n                                }\n                            });\n                        },\n                        fail: function (reason) {\n                            console.log('mod_googledocs_get_participant_by_id. Unable to get elements');\n                            console.log(reason)\n\n                        }\n                    }]);\n            };\n\n\n\n            GradingNavigation.prototype._leavepanel = function (e) {\n                var anchor = e.target.closest(\"a\");\n                var url = anchor.getAttribute('href');\n\n                if (Checker.checkFormForChanges('#gradeform')) {\n                    e.preventDefault();\n                    // Form has changes, so we need to confirm before switching users.\n                    str.get_strings([\n                        {key: 'unsavedchanges', component: 'mod_googledocs'},\n                        {key: 'unsavedchangesquestion', component: 'mod_googledocs'},\n                        {key: 'saveandcontinue', component: 'mod_googledocs'},\n                        {key: 'cancel', component: 'core'},\n                    ]).done(function (strs) {\n                        notification.confirm(strs[0], strs[1], strs[2], strs[3], function () {\n                            $(\"#gradeform\").trigger('submit', [{'direction': url}]);\n                        }, function () {\n                            $(\"#gradeform\").trigger('reset');\n\n                        });\n                    });\n                }\n            };\n\n            GradingNavigation.prototype._handleChangeUserHelper = function (nav) {\n\n                // Form has changes, so we need to confirm before switching users.\n                str.get_strings([\n                    {key: 'unsavedchanges', component: 'mod_googledocs'},\n                    {key: 'unsavedchangesquestion', component: 'mod_googledocs'},\n                    {key: 'saveandcontinue', component: 'mod_googledocs'},\n                    {key: 'cancel', component: 'core'},\n                ]).done(function (strs) {\n                    notification.confirm(strs[0], strs[1], strs[2], strs[3], function () {\n                        if (nav.target != undefined) {\n                            $(\"#gradeform\").trigger('submit', [{'direction': nav.target.className}]);\n                        } else {\n                            $(\"#gradeform\").trigger('submit', [{'userid': nav}]);\n                        }\n                    }, function () {                       \n                        $(\"#gradeform\").trigger('reset');\n                    });\n                });\n            };\n\n            return GradingNavigation;\n        });\n"],"file":"grading_navigation.min.js"}